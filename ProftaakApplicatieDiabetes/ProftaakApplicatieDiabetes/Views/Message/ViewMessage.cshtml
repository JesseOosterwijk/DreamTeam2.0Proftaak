@using Models
@using ProftaakApplicatieDiabetes.ViewModels
@model ProftaakApplicatieDiabetes.ViewModels.MessageViewModel
@{
    ViewData["Title"] = "Message";
}


@if (Model.Messages.Count() == 0)
{
    <h2>There are no messages if this is incorrect reload the page</h2>
}


<h2>Message</h2>

<form asp-action="SendMessage">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input data-val="true" id="CoupleId" name="CoupleId" type="hidden" value="@Model.CoupleId">
    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" required="" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Content" class="control-label"></label>
        <input asp-for="Content" class="form-control" required="" />
        <span asp-validation-for="Content" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Send Message" class="btn btn-default" />
    </div>
</form>
@foreach (MessageModel message in Model.Messages)
{
    <h3><b>@message.Title</b></h3>
    <p>@message.Content </p>
    <p>@message.DateOfX</p>
    <hr />
}
<a asp-controller="Home" asp-action="Index">Back to Home</a>
